// Быстрая сортировка
/* 
    один из самых быстрых алгоритмов, используется в dotnet. В общем случае O(n*logn)
                          0  1   2  3  4  5  6
    Входной массив arr = [1, 0, -6, 2, 5, 3, 2]
    Отсортировать по возврастанию.
    Суть сортировки:
    1. Выбор опорного элемента pivot(либо первый элемент, либо последний)
        Берем самый правый элемент и считаем его опорным
        pivot = arr[6] = 2
        Задача, чтобы все элементы меньше опорного стояли слева от опорного, а те, что больше - справа
        перемещаем pivot согласно условию
        [1, 0, -6, 2, 2(pivot), 5, 3]
    2. Берем левый подмассив и правый подмасив и делаем то же самое, что мы делали с исходным массивом:
     1. Работа с левым подмассивом:
        1. Левый подмассив [1, 0, -6, 2]
        pivot = arr[3] = 2
        [1, 0, -6, 2(pivot)]
        2. Левый подмассив [1, 0, -6]
        pivot = -6 -> [-6(pivot), 1, 0, ] -> [1, 0]
        3. Остался только правый подмассив [1, 0]
        pivot = 0 -> [0(pivot), 1] 
        4. Результат левого подмассива -> [-6, 0, 1, 2]
     2. Работа с правым подмассивом:
        1. Правый подмассив [5, 3]
        pivot = 3
        [3(pivot), 5]
        2. Результат левого подмассива -> [3, 5]
    3. Результат: [-6, 0, 1, 2, 2, 3, 5]

    Общий алгоритм данной сортировки:
    1. arr = [1, 0, -6, 2, 5, 3, 2]
    2. pivot = arr[6] = 2
    3. Вызвать шаги 1-2 для подмассива слева от pivot и справа от pivot
*/
